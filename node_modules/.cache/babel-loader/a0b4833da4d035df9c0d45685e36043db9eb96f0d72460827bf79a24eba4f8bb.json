{"ast":null,"code":"var _jsxFileName = \"/home/theticarcher38/code/RRW/src/pages/ServicesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport info from '../assets/info.json';\nimport { ServiceCard } from '../components/services/ServiceCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServicePage = () => {\n  _s();\n  const [activeServiceId, setActiveServiceId] = useState(null);\n  const services = info.services;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Our Packages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services\",\n      children: services.map(service => /*#__PURE__*/_jsxDEV(ServiceCard, {\n        id: service.id,\n        name: service.name,\n        colorClass: `color-${service.id}` // Add the color class\n        ,\n        onClick: () => setActiveServiceId(service.id) // Set active service\n      }, service.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"service-details\",\n      children: services.map(service => {\n        var _service$description, _service$description2;\n        const isVisible = service.id === activeServiceId;\n        const paragraphs = ((_service$description = service.description) === null || _service$description === void 0 ? void 0 : _service$description.paragraphs) || [];\n        const lists = ((_service$description2 = service.description) === null || _service$description2 === void 0 ? void 0 : _service$description2.lists) || [];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: service.id,\n          className: `service-desc ${isVisible ? 'active' : ''}` // Use active class to toggle visibility\n          ,\n          children: [paragraphs[0] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: paragraphs[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), lists[0] && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: lists[0].map((item, i) => item ? /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, `l0-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 28\n            }, this) : null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), paragraphs[1] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: paragraphs[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), lists[1] && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: lists[1].map((item, i) => item ? /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, `l1-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 28\n            }, this) : null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), paragraphs.slice(2).map((para, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: para\n          }, `p-${i + 2}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)), lists.slice(2).map((list, i) => /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: list.map((item, j) => item ? /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, `li-${i + 2}-${j}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 28\n            }, this) : null)\n          }, `ul-${i + 2}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))]\n        }, service.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ServicePage, \"5VXfDZFnyR4m0uglvXMPvcUV35Y=\");\n_c = ServicePage;\nexport default ServicePage;\nvar _c;\n$RefreshReg$(_c, \"ServicePage\");","map":{"version":3,"names":["React","useState","info","ServiceCard","jsxDEV","_jsxDEV","ServicePage","_s","activeServiceId","setActiveServiceId","services","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","service","id","name","colorClass","onClick","_service$description","_service$description2","isVisible","paragraphs","description","lists","item","i","slice","para","list","j","_c","$RefreshReg$"],"sources":["/home/theticarcher38/code/RRW/src/pages/ServicesPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport info from '../assets/info.json';\nimport { ServiceCard } from '../components/services/ServiceCard';\n\ntype Service = {\n  id: string;\n  name: string;\n  description?: {\n    paragraphs?: string[];\n    lists?: (string | null)[][];\n  };\n};\n\nconst ServicePage: React.FC = () => {\n  const [activeServiceId, setActiveServiceId] = useState<string | null>(null);\n  const services = info.services as Service[];\n\n  return (\n    <div className=\"container\">\n      <h2>Our Packages</h2>\n\n      {/* Service Cards */}\n      <div className=\"services\">\n        {services.map((service) => (\n          <ServiceCard\n            key={service.id}\n            id={service.id}\n            name={service.name}\n            colorClass={`color-${service.id}`} // Add the color class\n            onClick={() => setActiveServiceId(service.id)} // Set active service\n          />\n        ))}\n      </div>\n\n      {/* Service Descriptions */}\n      <div id=\"service-details\">\n        {services.map((service) => {\n          const isVisible = service.id === activeServiceId;\n          const paragraphs = service.description?.paragraphs || [];\n          const lists = service.description?.lists || [];\n\n          return (\n            <div\n              key={service.id}\n              id={service.id}\n              className={`service-desc ${isVisible ? 'active' : ''}`} // Use active class to toggle visibility\n            >\n              {/* 1. First Paragraph */}\n              {paragraphs[0] && <p>{paragraphs[0]}</p>}\n\n              {/* 2. First List */}\n              {lists[0] && (\n                <ul>\n                  {lists[0].map((item, i) =>\n                    item ? <li key={`l0-${i}`}>{item}</li> : null\n                  )}\n                </ul>\n              )}\n\n              {/* 3. Second Paragraph */}\n              {paragraphs[1] && <p>{paragraphs[1]}</p>}\n\n              {/* 4. Second List */}\n              {lists[1] && (\n                <ul>\n                  {lists[1].map((item, i) =>\n                    item ? <li key={`l1-${i}`}>{item}</li> : null\n                  )}\n                </ul>\n              )}\n\n              {/* 5. Remaining Paragraphs */}\n              {paragraphs.slice(2).map((para, i) => (\n                <p key={`p-${i + 2}`}>{para}</p>\n              ))}\n\n              {/* 6. Remaining Lists */}\n              {lists.slice(2).map((list, i) => (\n                <ul key={`ul-${i + 2}`}>\n                  {list.map((item, j) =>\n                    item ? <li key={`li-${i + 2}-${j}`}>{item}</li> : null\n                  )}\n                </ul>\n              ))}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ServicePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}